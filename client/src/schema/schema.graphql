"""Exposes a URL that specifies the behaviour of this scalar."""
directive @specifiedBy(
  """The URL that specifies the behaviour of this scalar."""
  url: String!
) on SCALAR

"""All input for the create `TodoCreateTable` mutation."""
input CreateTodoCreateTableInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """The `TodoCreateTable` to be created by this mutation."""
  todoCreateTable: TodoCreateTableInput!
}

"""The output of our create `TodoCreateTable` mutation."""
type CreateTodoCreateTablePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `TodoCreateTable` that was created by this mutation."""
  todoCreateTable: TodoCreateTable

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `TodoCreateTable`. May be used by Relay 1."""
  todoCreateTableEdge(
    """The method to use when ordering `TodoCreateTable`."""
    orderBy: [TodoCreateTablesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TodoCreateTablesEdge
}

"""A location in a connection that can be used for resuming pagination."""
scalar Cursor

"""
A point in time as described by the [ISO
8601](https://en.wikipedia.org/wiki/ISO_8601) standard. May or may not include a timezone.
"""
scalar Datetime

"""All input for the `deleteTodoCreateTableByRowId` mutation."""
input DeleteTodoCreateTableByRowIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String
  rowId: Int!
}

"""All input for the `deleteTodoCreateTable` mutation."""
input DeleteTodoCreateTableInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `TodoCreateTable` to be deleted.
  """
  id: ID!
}

"""The output of our delete `TodoCreateTable` mutation."""
type DeleteTodoCreateTablePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `TodoCreateTable` that was deleted by this mutation."""
  todoCreateTable: TodoCreateTable
  deletedTodoCreateTableId: ID

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `TodoCreateTable`. May be used by Relay 1."""
  todoCreateTableEdge(
    """The method to use when ordering `TodoCreateTable`."""
    orderBy: [TodoCreateTablesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TodoCreateTablesEdge
}

"""
The root mutation type which contains root level fields which mutate data.
"""
type Mutation {
  """Creates a single `TodoCreateTable`."""
  createTodoCreateTable(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: CreateTodoCreateTableInput!
  ): CreateTodoCreateTablePayload

  """
  Updates a single `TodoCreateTable` using its globally unique id and a patch.
  """
  updateTodoCreateTable(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTodoCreateTableInput!
  ): UpdateTodoCreateTablePayload

  """Updates a single `TodoCreateTable` using a unique key and a patch."""
  updateTodoCreateTableByRowId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: UpdateTodoCreateTableByRowIdInput!
  ): UpdateTodoCreateTablePayload

  """Deletes a single `TodoCreateTable` using its globally unique id."""
  deleteTodoCreateTable(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTodoCreateTableInput!
  ): DeleteTodoCreateTablePayload

  """Deletes a single `TodoCreateTable` using a unique key."""
  deleteTodoCreateTableByRowId(
    """
    The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.
    """
    input: DeleteTodoCreateTableByRowIdInput!
  ): DeleteTodoCreateTablePayload
}

"""An object with a globally unique `ID`."""
interface Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: Cursor

  """When paginating forwards, the cursor to continue."""
  endCursor: Cursor
}

"""The root query type which gives access points into the data universe."""
type Query implements Node {
  """
  Exposes the root query type nested one level down. This is helpful for Relay 1
  which can only query top level fields if they are in a particular form.
  """
  query: Query!

  """
  The root query type must be a `Node` to work well with Relay 1 mutations. This just resolves to `query`.
  """
  id: ID!

  """Fetches an object given its globally unique `ID`."""
  node(
    """The globally unique `ID`."""
    id: ID!
  ): Node

  """Reads and enables pagination through a set of `TodoCreateTable`."""
  allTodoCreateTables(
    """Only read the first `n` values of the set."""
    first: Int

    """Only read the last `n` values of the set."""
    last: Int

    """
    Skip the first `n` values from our `after` cursor, an alternative to cursor
    based pagination. May not be used with `last`.
    """
    offset: Int

    """Read all values in the set before (above) this cursor."""
    before: Cursor

    """Read all values in the set after (below) this cursor."""
    after: Cursor

    """The method to use when ordering `TodoCreateTable`."""
    orderBy: [TodoCreateTablesOrderBy!] = [PRIMARY_KEY_ASC]

    """
    A condition to be used in determining which values should be returned by the collection.
    """
    condition: TodoCreateTableCondition
  ): TodoCreateTablesConnection
  todoCreateTableByRowId(rowId: Int!): TodoCreateTable

  """Reads a single `TodoCreateTable` using its globally unique `ID`."""
  todoCreateTable(
    """
    The globally unique `ID` to be used in selecting a single `TodoCreateTable`.
    """
    id: ID!
  ): TodoCreateTable
}

type TodoCreateTable implements Node {
  """
  A globally unique identifier. Can be used in various places throughout the system to identify this single value.
  """
  id: ID!
  rowId: Int!
  task: String
  completed: Boolean!
  dateCreated: Datetime!
  dateUpdated: Datetime!
}

"""
A condition to be used against `TodoCreateTable` object types. All fields are
tested for equality and combined with a logical ‘and.’
"""
input TodoCreateTableCondition {
  """Checks for equality with the object’s `rowId` field."""
  rowId: Int

  """Checks for equality with the object’s `task` field."""
  task: String

  """Checks for equality with the object’s `completed` field."""
  completed: Boolean

  """Checks for equality with the object’s `dateCreated` field."""
  dateCreated: Datetime

  """Checks for equality with the object’s `dateUpdated` field."""
  dateUpdated: Datetime
}

"""An input for mutations affecting `TodoCreateTable`"""
input TodoCreateTableInput {
  task: String
  completed: Boolean
  dateCreated: Datetime
  dateUpdated: Datetime
}

"""
Represents an update to a `TodoCreateTable`. Fields that are set will be updated.
"""
input TodoCreateTablePatch {
  task: String
  completed: Boolean
  dateCreated: Datetime
  dateUpdated: Datetime
}

"""A connection to a list of `TodoCreateTable` values."""
type TodoCreateTablesConnection {
  """A list of `TodoCreateTable` objects."""
  nodes: [TodoCreateTable]!

  """
  A list of edges which contains the `TodoCreateTable` and cursor to aid in pagination.
  """
  edges: [TodoCreateTablesEdge!]!

  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """
  The count of *all* `TodoCreateTable` you could get from the connection.
  """
  totalCount: Int!
}

"""A `TodoCreateTable` edge in the connection."""
type TodoCreateTablesEdge {
  """A cursor for use in pagination."""
  cursor: Cursor

  """The `TodoCreateTable` at the end of the edge."""
  node: TodoCreateTable
}

"""Methods to use when ordering `TodoCreateTable`."""
enum TodoCreateTablesOrderBy {
  NATURAL
  ID_ASC
  ID_DESC
  TASK_ASC
  TASK_DESC
  COMPLETED_ASC
  COMPLETED_DESC
  DATE_CREATED_ASC
  DATE_CREATED_DESC
  DATE_UPDATED_ASC
  DATE_UPDATED_DESC
  PRIMARY_KEY_ASC
  PRIMARY_KEY_DESC
}

"""All input for the `updateTodoCreateTableByRowId` mutation."""
input UpdateTodoCreateTableByRowIdInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  An object where the defined keys will be set on the `TodoCreateTable` being updated.
  """
  todoCreateTablePatch: TodoCreateTablePatch!
  rowId: Int!
}

"""All input for the `updateTodoCreateTable` mutation."""
input UpdateTodoCreateTableInput {
  """
  An arbitrary string value with no semantic meaning. Will be included in the
  payload verbatim. May be used to track mutations by the client.
  """
  clientMutationId: String

  """
  The globally unique `ID` which will identify a single `TodoCreateTable` to be updated.
  """
  id: ID!

  """
  An object where the defined keys will be set on the `TodoCreateTable` being updated.
  """
  todoCreateTablePatch: TodoCreateTablePatch!
}

"""The output of our update `TodoCreateTable` mutation."""
type UpdateTodoCreateTablePayload {
  """
  The exact same `clientMutationId` that was provided in the mutation input,
  unchanged and unused. May be used by a client to track mutations.
  """
  clientMutationId: String

  """The `TodoCreateTable` that was updated by this mutation."""
  todoCreateTable: TodoCreateTable

  """
  Our root query field type. Allows us to run any query from our mutation payload.
  """
  query: Query

  """An edge for our `TodoCreateTable`. May be used by Relay 1."""
  todoCreateTableEdge(
    """The method to use when ordering `TodoCreateTable`."""
    orderBy: [TodoCreateTablesOrderBy!] = [PRIMARY_KEY_ASC]
  ): TodoCreateTablesEdge
}

